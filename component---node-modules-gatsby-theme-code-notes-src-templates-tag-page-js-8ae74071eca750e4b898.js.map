{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-code-notes/src/templates/TagPage.js","webpack:///./node_modules/gatsby-theme-code-notes/src/components/NoteList/NoteList.tsx","webpack:///./node_modules/gatsby-theme-code-notes/src/components/NotesPage/NotesPage.tsx"],"names":["NotesPage","pageQuery","NoteList","notes","map","node","frontmatter","title","tags","emoji","fields","dateModified","modifiedTimestamp","slug","NoteListItem","key","data","pageContext","location","allMdx","edges","siteTitle","useSiteMetadata","Layout","activeTag","tag","path","pathname","basePath","hasUntagged","as","variant","TagDot","size"],"mappings":"6FACA,iEAEeA,YAAf,EAEO,IAAMC,EAAS,c,mICETC,EAA6C,SAAC,GAAc,IAAZC,EAAY,EAAZA,MAC3D,OACE,kBAAC,WAAD,KACGA,EAAMC,KAAI,YAAc,IAAXC,EAAW,EAAXA,KAAW,EACQA,EAAKC,YAA5BC,EADe,EACfA,MAAOC,EADQ,EACRA,KAAMC,EADE,EACFA,MADE,EAE2BJ,EAAKK,OAA/CC,EAFe,EAEfA,aAAcC,EAFC,EAEDA,kBAAmBC,EAFlB,EAEkBA,KACzC,OACE,kBAACC,EAAA,EAAD,CACEP,MAAOA,EACPE,MAAOA,EACPD,KAAMA,EACNK,KAAMA,EACNF,aAAcA,EACdC,kBAAmBA,EACnBG,IAAKF,S,oCCbJb,EAAY,SAAC,GAAoC,IAAlCgB,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCf,EAAQa,EAAKG,OAAOC,MAEpBC,EADYC,cAAVf,MAGR,OACE,YAACgB,EAAA,EAAD,CACEC,UAAWP,EAAYQ,IACvBC,KAAMR,EAASS,SACfC,SAAUX,EAAYW,SACtBC,YAAaZ,EAAYY,YACzBtB,MAAOU,EAAYQ,IAAZ,QAA0BR,EAAYQ,IAAQJ,GAEpDJ,EAAYQ,KACX,YAAC,IAAD,CAASK,GAAG,KAAKC,QAAQ,aACF,aAApBd,EAAYQ,IACX,YAAC,WAAD,KACE,YAACO,EAAA,EAAD,CAAQP,IAAKR,EAAYQ,IAAKQ,KAAK,UADrC,IACiDhB,EAAYQ,KAG7D,YAAC,WAAD,wBAIN,YAAC,EAAD,CAAUtB,MAAOA","file":"component---node-modules-gatsby-theme-code-notes-src-templates-tag-page-js-8ae74071eca750e4b898.js","sourcesContent":["import { graphql } from 'gatsby'\nimport { NotesPage } from '../components/NotesPage'\n\nexport default NotesPage\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    allMdx(\n      sort: { fields: frontmatter___title, order: ASC }\n      filter: { frontmatter: { tags: { eq: $tag } } }\n    ) {\n      edges {\n        node {\n          id\n          ...AllPages\n        }\n      }\n    }\n  }\n`\n","import React, { Fragment, FunctionComponent } from 'react'\nimport { NoteListItem } from '../NoteListItem'\n\ninterface NoteListProps {\n  notes: any[]\n}\n\nexport const NoteList: FunctionComponent<NoteListProps> = ({ notes }) => {\n  return (\n    <Fragment>\n      {notes.map(({ node }) => {\n        const { title, tags, emoji } = node.frontmatter\n        const { dateModified, modifiedTimestamp, slug } = node.fields\n        return (\n          <NoteListItem\n            title={title}\n            emoji={emoji}\n            tags={tags}\n            slug={slug}\n            dateModified={dateModified}\n            modifiedTimestamp={modifiedTimestamp}\n            key={slug}\n          />\n        )\n      })}\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx, Heading } from 'theme-ui'\nimport { Fragment } from 'react'\nimport { NoteList } from '../NoteList'\nimport { Layout } from '../Layout'\nimport { useSiteMetadata } from '../../use-site-metadata'\nimport { TagDot } from '../TagDot'\n\nexport const NotesPage = ({ data, pageContext, location }) => {\n  const notes = data.allMdx.edges\n  const { title } = useSiteMetadata()\n  const siteTitle = title\n\n  return (\n    <Layout\n      activeTag={pageContext.tag}\n      path={location.pathname}\n      basePath={pageContext.basePath}\n      hasUntagged={pageContext.hasUntagged}\n      title={pageContext.tag ? `Tag: ${pageContext.tag}` : siteTitle}\n    >\n      {pageContext.tag && (\n        <Heading as=\"h1\" variant=\"noteTitle\">\n          {pageContext.tag !== 'untagged' ? (\n            <Fragment>\n              <TagDot tag={pageContext.tag} size=\"0.5em\" /> {pageContext.tag}\n            </Fragment>\n          ) : (\n            <Fragment>Untagged Notes</Fragment>\n          )}\n        </Heading>\n      )}\n      <NoteList notes={notes} />\n    </Layout>\n  )\n}\n"],"sourceRoot":""}